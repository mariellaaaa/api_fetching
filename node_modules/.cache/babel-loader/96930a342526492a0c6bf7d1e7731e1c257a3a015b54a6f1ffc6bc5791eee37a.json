{"ast":null,"code":"var _jsxFileName = \"/Users/mariella/Desktop/apifetching/apifetching/src/components/pages/LiveArena.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiveArena = () => {\n  _s();\n  const [fetchedData, setFetchedData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedSport, setSelectedSport] = useState('all');\n  const [selectedCompetition, setSelectedCompetition] = useState('');\n  const [selectedDate, setSelectedDate] = useState(new Date('2024-09-07'));\n  const [datesWithMatches, setDatesWithMatches] = useState([]);\n  const [sportsOptions, setSportsOptions] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      let url = 'https://www.rtl.lu/api/sportstream/livestreams?start_date=2024-09-03&end_date=2024-09-10&source=live-arena';\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        console.log('API Response:', data);\n\n        // Extract sports types\n        const sports = new Set();\n        Object.keys(data).forEach(sportType => {\n          sports.add(sportType);\n        });\n\n        // Filter out available sports and set options\n        const availableSports = ['all', 'football', 'handball'];\n        const allSports = ['all', 'football', 'handball', 'basketball', 'volleyball', 'cycling'];\n        setSportsOptions(allSports.map(sport => ({\n          value: sport,\n          label: sport.charAt(0).toUpperCase() + sport.slice(1),\n          disabled: !availableSports.includes(sport)\n        })));\n\n        // Extract dates with matches\n        const allDates = new Set();\n        Object.keys(data).forEach(sportType => {\n          Object.keys(data[sportType]).forEach(competitionKey => {\n            Object.keys(data[sportType][competitionKey].entries).forEach(date => {\n              allDates.add(date);\n            });\n          });\n        });\n        setDatesWithMatches(Array.from(allDates).map(date => new Date(date)));\n        setFetchedData(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (selectedDate) {\n      const formattedDate = selectedDate.toISOString().split('T')[0];\n      const fetchDateData = async () => {\n        let url = `https://www.rtl.lu/api/sportstream/livestreams?start_date=${formattedDate}&end_date=${formattedDate}&source=live-arena`;\n        if (selectedSport !== 'all') {\n          url += `&types=${selectedSport}`;\n        }\n        try {\n          const response = await fetch(url);\n          const data = await response.json();\n          console.log('API Response for date:', data);\n          setFetchedData(data);\n          setLoading(false);\n        } catch (error) {\n          console.error('Error fetching date data:', error);\n          setLoading(false);\n        }\n      };\n      fetchDateData();\n    }\n  }, [selectedDate, selectedSport]);\n  const handleSportChange = event => {\n    setSelectedSport(event.target.value);\n    setLoading(true);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Live Arena\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedSport,\n      onChange: handleSportChange,\n      children: sportsOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option.value,\n        disabled: option.disabled,\n        children: option.label\n      }, option.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(LiveArena, \"JdFX0K5IXakFymEJPP6PfOgbhco=\");\n_c = LiveArena;\nexport default LiveArena;\nvar _c;\n$RefreshReg$(_c, \"LiveArena\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","LiveArena","_s","fetchedData","setFetchedData","loading","setLoading","selectedSport","setSelectedSport","selectedCompetition","setSelectedCompetition","selectedDate","setSelectedDate","Date","datesWithMatches","setDatesWithMatches","sportsOptions","setSportsOptions","fetchData","url","response","fetch","data","json","console","log","sports","Set","Object","keys","forEach","sportType","add","availableSports","allSports","map","sport","value","label","charAt","toUpperCase","slice","disabled","includes","allDates","competitionKey","entries","date","Array","from","error","formattedDate","toISOString","split","fetchDateData","handleSportChange","event","target","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","option","_c","$RefreshReg$"],"sources":["/Users/mariella/Desktop/apifetching/apifetching/src/components/pages/LiveArena.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst LiveArena = () => {\n  const [fetchedData, setFetchedData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedSport, setSelectedSport] = useState('all');\n  const [selectedCompetition, setSelectedCompetition] = useState('');\n  const [selectedDate, setSelectedDate] = useState(new Date('2024-09-07'));\n  const [datesWithMatches, setDatesWithMatches] = useState([]);\n  const [sportsOptions, setSportsOptions] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let url = 'https://www.rtl.lu/api/sportstream/livestreams?start_date=2024-09-03&end_date=2024-09-10&source=live-arena';\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        console.log('API Response:', data);\n        \n        // Extract sports types\n        const sports = new Set();\n        Object.keys(data).forEach(sportType => {\n          sports.add(sportType);\n        });\n        \n        // Filter out available sports and set options\n        const availableSports = ['all', 'football', 'handball'];\n        const allSports = ['all', 'football', 'handball', 'basketball', 'volleyball', 'cycling'];\n        setSportsOptions(allSports.map(sport => ({\n          value: sport,\n          label: sport.charAt(0).toUpperCase() + sport.slice(1),\n          disabled: !availableSports.includes(sport)\n        })));\n\n        // Extract dates with matches\n        const allDates = new Set();\n        Object.keys(data).forEach(sportType => {\n          Object.keys(data[sportType]).forEach(competitionKey => {\n            Object.keys(data[sportType][competitionKey].entries).forEach(date => {\n              allDates.add(date);\n            });\n          });\n        });\n        \n        setDatesWithMatches(Array.from(allDates).map(date => new Date(date)));\n        setFetchedData(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (selectedDate) {\n      const formattedDate = selectedDate.toISOString().split('T')[0];\n      const fetchDateData = async () => {\n        let url = `https://www.rtl.lu/api/sportstream/livestreams?start_date=${formattedDate}&end_date=${formattedDate}&source=live-arena`;\n        if (selectedSport !== 'all') {\n          url += `&types=${selectedSport}`;\n        }\n        try {\n          const response = await fetch(url);\n          const data = await response.json();\n          console.log('API Response for date:', data);\n          setFetchedData(data);\n          setLoading(false);\n        } catch (error) {\n          console.error('Error fetching date data:', error);\n          setLoading(false);\n        }\n      };\n\n      fetchDateData();\n    }\n  }, [selectedDate, selectedSport]);\n\n  const handleSportChange = (event) => {\n    setSelectedSport(event.target.value);\n    setLoading(true);\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h1>Live Arena</h1>\n      <select value={selectedSport} onChange={handleSportChange}>\n        {sportsOptions.map((option) => (\n          <option key={option.value} value={option.value} disabled={option.disabled}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n      {/* Rest of your component code */}\n    </div>\n  );\n};\n\nexport default LiveArena;\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}